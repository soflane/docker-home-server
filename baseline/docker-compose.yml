version: "3.5"
services:
######################################
#        Traefik Reverse Proxy       #
######################################   
  traefik:
    # PLEASE keep tags, and not 'latest', because WatchTower will auto update this image
    image: traefik:${TRAEFIK_VERSION}
    env_file: .env
    container_name: traefik
    hostname: ${TRAEFIK_DASHBOARD_HOSTNAME}
    command:
      - "--log.level=INFO"
      #- "--log.filepath=/var/log/traefik.log"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.file.directory=/custom-conf/"
      - "--providers.file.watch=true"
      - "--global.checknewversion=true"
      - "--global.sendanonymoususage=false"
      - "--certificatesresolvers.lets-encrypt=true"
      - "--certificatesresolvers.lets-encrypt.acme.email=${TRAEFIK_ACME_EMAIL}"
      - "--certificatesresolvers.lets-encrypt.acme.caserver=${TRAEFIK_ACME_CASERVER:-https://acme-v02.api.letsencrypt.org/directory}"
      # For development purposes
      #- "--certificatesresolvers.lets-encrypt.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.lets-encrypt.acme.tlschallenge=${TRAEFIK_ACME_TLSCHALLENGE:-false}"
      - "--certificatesresolvers.lets-encrypt.acme.dnschallenge=${TRAEFIK_ACME_DNSCHALLENGE:-false}"
      - "--certificatesresolvers.lets-encrypt.acme.dnschallenge.provider=${TRAEFIK_ACME_DNSCHALLENGE_PROVIDER:-''}"
      - "--certificatesresolvers.lets-encrypt.acme.dnschallenge.delaybeforecheck=${TRAEFIK_ACME_DNSCHALLENGE_DELAYBEFORECHECK:-10}"
      - "--certificatesresolvers.lets-encrypt.acme.storage=/letsencrypt/acme.json"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=web-secure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
      - "--entrypoints.web-secure.address=:443"
      - "--entrypoints.web-secure.http.middlewares=security-protocol@file"
      - "--accesslog=true"
      - "--accesslog.filepath=/var/log/access.log"
      #- "--accesslog.filters.statuscodes=400-499"
      #- "--api=true"
      - "--api.dashboard=true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./traefik-conf/:/custom-conf/
      - ./letsencrypt:/letsencrypt
      - /var/log/traefik:/var/log
    labels:
      - traefik.enable=true
      - traefik.http.routers.proxy-api.rule=Host(`${TRAEFIK_DASHBOARD_HOSTNAME}.${MAIN_DOMAIN}`)
      - traefik.http.routers.proxy-api.middlewares=security-protocol-pw@file
      - traefik.http.routers.proxy-api.entrypoints=web-secure
      - traefik.http.routers.proxy-api.tls.certresolver=lets-encrypt
      - traefik.http.routers.proxy-api.service=api@internal
      - traefik.http.routers.proxy-api.tls
      # Enable flame dashboard link
      - flame.type=application # "app" works too
      - flame.name=Traefik
      - flame.url=https://${TRAEFIK_DASHBOARD_HOSTNAME}.${MAIN_DOMAIN}
      #- flame.icon=icon-name # Optional, default is "docker"
      # Enable Auto-Updates (Watchtower)
      - com.centurylinklabs.watchtower.enable=true
    networks:
      - traefik
    expose:
      - 8080
    ports:
      - 80:80
      - 443:443
    restart: unless-stopped
######################################
#            Dashboard               #
###################################### 
  flame:
      image: pawelmalak/flame:latest
      container_name: flame
      hostname: ${FLAME_HOSTNAME}    
      env_file: .env
      labels:
        - traefik.enable=true
        - traefik.http.routers.flame.entrypoints=web-secure
        - traefik.http.routers.flame.rule=Host(`${FLAME_HOSTNAME}.${MAIN_DOMAIN}`)
        - traefik.http.routers.flame.tls.certresolver=lets-encrypt
        - traefik.http.routers.flame.middlewares=basic-auth@file
        # Enable Auto-Updates (Watchtower)
        - com.centurylinklabs.watchtower.enable=true
      volumes:
        - ${FLAME_CONFIG}:/app/data
        - /var/run/docker.sock:/var/run/docker.sock # optional but required for Docker integration feature
      networks:
        - traefik
      expose:
        - 5005
      restart: unless-stopped
######################################
#            Portainer               #
######################################   
  portainer:    
    image: portainer/portainer
    container_name: portainer
    hostname: ${PORTAINER_HOSTNAME}        
    env_file: .env
    labels:
      - traefik.enable=true
      - traefik.http.routers.portainer.entrypoints=web-secure
      - traefik.http.routers.portainer.rule=Host(`${PORTAINER_HOSTNAME}.${MAIN_DOMAIN}`)
      - traefik.http.routers.portainer.middlewares=security-protocol@file
      - traefik.http.routers.portainer.tls.certresolver=lets-encrypt
      - traefik.http.services.portainer.loadbalancer.server.port=9000
      # Enable Auto-Updates (Watchtower)
      - com.centurylinklabs.watchtower.enable=true
      # Enable flame dashboard link
      - flame.type=application # "app" works too
      - flame.name=Portainer
      - flame.url=https://${PORTAINER_HOSTNAME}.${MAIN_DOMAIN}
      #- flame.icon=icon-name # Optional, default is "docker"
      
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - data:/data
    networks:
      - traefik
    expose:
      - "9000"
    restart: always
######################################
#              NetData               #
######################################    
  netdata:
    container_name: netdata
    env_file: .env
    image: netdata/netdata:stable
    hostname: ${NETDATA_HOSTNAME} # set to fqdn of host
    #environment :
    #  - DOCKER_USR=root
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik
      - traefik.http.routers.netdata.rule=Host(`${NETDATA_HOSTNAME}.${MAIN_DOMAIN}`)
      - traefik.http.routers.netdata.tls.certresolver=lets-encrypt
      - traefik.http.routers.netdata.entrypoints=web-secure
      - traefik.http.routers.netdata.middlewares=security-protocol-pw@file
      # Enable Auto-Updates (Watchtower)
      - com.centurylinklabs.watchtower.enable=true
      # Enable flame dashboard link
      - flame.type=application # "app" works too
      - flame.name=Netdata
      - flame.url=https://${NETDATA_HOSTNAME}.${MAIN_DOMAIN}
      #- flame.icon=icon-name # Optional, default is "docker"
    expose:
      - "19999"
    cap_add:
      - SYS_PTRACE
    security_opt:
      - apparmor:unconfined
    networks: 
      - traefik
    volumes:
      #- ./netdataconfig/netdata:/etc/netdata:ro   ## See : https://learn.netdata.cloud/docs/agent/packaging/docker#host-editable-configuration
      - netdataconfig:/etc/netdata
      - netdatalib:/var/lib/netdata
      - netdatacache:/var/cache/netdata
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /etc/passwd:/host/etc/passwd:ro 
      - /etc/group:/host/etc/group:ro
      - /etc/os-release:/host/etc/os-release:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    restart: always
######################################
#               DNS                  #
######################################
  ddclient:
    image: linuxserver/ddclient
    container_name: ddclient
    labels:
      - traefik.enable=false
      # Enable Auto-Updates (Watchtower)
      - com.centurylinklabs.watchtower.enable=true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TIMEZONE}
    volumes:
      - ${DDCLIENT_CONFIG}:/config
    restart: unless-stopped
######################################
#              Watchtower            #
#      Auto-update containers        #
# CAUTION! USE THIS WITH IMAGES TAGS #
###################################### 
  watchtower:
    image: containrrr/watchtower
    env_file: .env
    container_name: watchtower
    hostname: watchtower    # helps watchtower write container names instead of IDs in notifications
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: unless-stopped

networks:
  traefik:
    name: traefik  
volumes:
  data:
  netdataconfig:
  netdatalib:
  netdatacache:
