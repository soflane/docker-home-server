http:         
  middlewares:
#
#  HTTPS Redirection
#
    force-https:
      redirectScheme:
        scheme: https
#
#  Authentication
#
    basic-auth:
      basicAuth:
        users:
          - '{{env "BASIC_AUTH_USER"}}'
        #usersFile: "/custom-conf/auth-users.txt"
  #
  #     If you don't use joal, just delete the following middleware 
  #     
  #     This is specific for joal, instead of configuring the web UI to connect to the joal deamon each time visiting the page, this add the configuration in the URL as GET requests. 
  #     "What about security?" would you ask, this is why there is a basic auth in the joal-chain 
  #        
  #  add-joal:
  #    redirectRegex:
  #      regex: "(.*)ratio.<YOURDOMAIN>(.*)"
  #      replacement: "https://joal.<YOURDOMAIN>/joal/ui?ui_credentials=%7B%0A%20%20%22host%22%3A%20%22joal.<YOURDOMAIN>%22%2C%0A%20%20%22port%22%3A%20443%2C%0A%20%20%22pathPrefix%22%3A%20%22joal%22%2C%0A%20%20%22secretToken%22%3A%20%22Trololo%22%0A%7D"
  #
  #  Add security policies to get a better score at SSLabs 
  #
    headers-control:
      headers:
        accessControlAllowMethods:
          - GET
          - OPTIONS
          - PUT
          - PATCH
        accessControlAllowHeaders:
          - "*"
        accessControlAllowOriginList:
          - "*"
        addVaryHeader: true
        accessControlMaxAge: 100
        hostsProxyHeaders:
          - "X-Forwarded-Host"
        #sslRedirect: true
        stsSeconds: 315360000
        stsIncludeSubdomains: true
        stsPreload: true
        forceSTSHeader: true
        frameDeny: true #overwritten by customFrameOptionsValue
        customFrameOptionsValue: "SAMEORIGIN" #CSP takes care of this but may be needed for organizr.
        contentTypeNosniff: true
        browserXssFilter: true
        # sslForceHost: true # add sslHost to all of the services
        referrerPolicy: "same-origin"
        # Setting contentSecurityPolicy is more secure but it can break things. Proper auth will reduce the risk.
        # the below line also breaks some apps due to 'none' - sonarr, radarr, etc.
        #contentSecurityPolicy: "frame-ancestors '*.soflane.ovh:*';object-src 'none';script-src 'none';"
        #featurePolicy: "camera 'none'; geolocation 'none'; microphone 'none'; payment 'none'; usb 'none';"
        customResponseHeaders:
          X-Robots-Tag: "none,noarchive,nosnippet,notranslate,noimageindex,"
          server: ""
          Permissions-Policy: "accelerometer=(),autoplay=(),camera=(),encrypted-media=(),fullscreen=*,geolocation=*,gyroscope=(),magnetometer=(),microphone=(),midi=(),sync-xhr=*,usb=(),xr-spatial-tracking=()"
          #Permissions-Policy: "geolocation=(self), microphone=(), camera=(), fullscreen=*""
          #Content-Security-Policy: "default-src 'self'"
    rate-limit:
      rateLimit: 
        average: 100
        burst: 50       
#
#  Always use this middleware with services to improve security, choose between 'security-protocol' and 'security-protocol-pw' if you need a basic auth (htaccess) password protection
    security-protocol:
      chain:
        middlewares:
          - force-https
          - rate-limit
          - headers-control
    security-protocol-pw:
      chain:
        middlewares:
          - force-https
          - basic-auth
          - rate-limit
          - headers-control

tls:
  options:
    default:
      minVersion: VersionTLS12
      sniStrict: true
      cipherSuites:  # Based on non weak ciphers on ssllabs.com on 02/11/2020 - https://www.smarthomebeginner.com/traefik-docker-security-best-practices/#Securing_Docker_Applications_using_Traefik
        - TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
        - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305
        - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
        - TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
        - TLS_AES_128_GCM_SHA256
        - TLS_AES_256_GCM_SHA384
        - TLS_CHACHA20_POLY1305_SHA256
      curvePreferences:
        - CurveP521
        - CurveP384
          
